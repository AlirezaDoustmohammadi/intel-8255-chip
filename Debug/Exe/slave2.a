;
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <delay.h>
;
;// Declare your global variables here
;
;    char c;
;
;void main(void)
; 0000 000E {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000F 
; 0000 0010 
; 0000 0011 
; 0000 0012 // Declare your local variables here
; 0000 0013 
; 0000 0014 // Timer/Counter 0 initialization
; 0000 0015 // Clock source: System Clock
; 0000 0016 // Clock value: Timer 0 Stopped
; 0000 0017 // Mode: Normal top=0xFF
; 0000 0018 // OC0 output: Disconnected
; 0000 0019 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001A TCNT0=0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001B OCR0=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 001C 
; 0000 001D // Timer/Counter 1 initialization
; 0000 001E // Clock source: System Clock
; 0000 001F // Clock value: Timer1 Stopped
; 0000 0020 // Mode: Normal top=0xFFFF
; 0000 0021 // OC1A output: Disconnected
; 0000 0022 // OC1B output: Disconnected
; 0000 0023 // Noise Canceler: Off
; 0000 0024 // Input Capture on Falling Edge
; 0000 0025 // Timer1 Overflow Interrupt: Off
; 0000 0026 // Input Capture Interrupt: Off
; 0000 0027 // Compare A Match Interrupt: Off
; 0000 0028 // Compare B Match Interrupt: Off
; 0000 0029 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 002A TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 002B TCNT1H=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 002C TCNT1L=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002D ICR1H=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002E ICR1L=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002F OCR1AH=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0030 OCR1AL=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0031 OCR1BH=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0032 OCR1BL=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0033 
; 0000 0034 // Timer/Counter 2 initialization
; 0000 0035 // Clock source: System Clock
; 0000 0036 // Clock value: Timer2 Stopped
; 0000 0037 // Mode: Normal top=0xFF
; 0000 0038 // OC2 output: Disconnected
; 0000 0039 ASSR=0<<AS2;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 003A TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003B TCNT2=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 003C OCR2=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003D 
; 0000 003E // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 003F TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0040 
; 0000 0041 // External Interrupt(s) initialization
; 0000 0042 // INT0: Off
; 0000 0043 // INT1: Off
; 0000 0044 // INT2: Off
; 0000 0045 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0046 MCUCSR=(0<<ISC2);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0047 
; 0000 0048 // USART initialization
; 0000 0049 // USART disabled
; 0000 004A UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 004B 
; 0000 004C // Analog Comparator initialization
; 0000 004D // Analog Comparator: Off
; 0000 004E // The Analog Comparator's positive input is
; 0000 004F // connected to the AIN0 pin
; 0000 0050 // The Analog Comparator's negative input is
; 0000 0051 // connected to the AIN1 pin
; 0000 0052 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0053 SFIOR=(0<<ACME);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0054 
; 0000 0055 // ADC initialization
; 0000 0056 // ADC disabled
; 0000 0057 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0058 
; 0000 0059 // SPI initialization
; 0000 005A // SPI disabled
; 0000 005B SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 005C 
; 0000 005D // TWI initialization
; 0000 005E // TWI disabled
; 0000 005F TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0060 
; 0000 0061 // Alphanumeric LCD initialization
; 0000 0062 // Connections are specified in the
; 0000 0063 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0064 // RS - PORTC Bit 0
; 0000 0065 // RD - PORTC Bit 1
; 0000 0066 // EN - PORTC Bit 2
; 0000 0067 // D4 - PORTC Bit 4
; 0000 0068 // D5 - PORTC Bit 5
; 0000 0069 // D6 - PORTC Bit 6
; 0000 006A // D7 - PORTC Bit 7
; 0000 006B // Characters/line: 16
; 0000 006C lcd_init(16);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006D 
; 0000 006E //~obf
; 0000 006F DDRB.0=0;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0070 
; 0000 0071 //~Ack
; 0000 0072 DDRB.1=1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0073 PORTB.1=1;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0074 
; 0000 0075 //data
; 0000 0076 DDRA=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0077 
; 0000 0078 
; 0000 0079 while (1){
;PCODE: $0000004C VOL: 0
; 0000 007A 
; 0000 007B       if(PINB.0==0){
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 007C          c=PINA;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 007D          lcd_clear();
;PCODE: $00000052 VOL: 0
; 0000 007E          lcd_putchar(c);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 007F          delay_ms(100);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0080          PORTB.1=0;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0081          delay_ms(250);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0082          PORTB.1=1;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0083        }
; 0000 0084 }
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0085 
; 0000 0086 }
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
